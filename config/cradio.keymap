#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "hold_tap";
            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            bindings =
                <&kp>,
                <&kp>;

            flavor = "tap-preferred";
            global-quick-tap;
        };
        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31>;
        };
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 32 33>;
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <10 19>;
            layers = <0>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <3 6>;
            layers = <0>;
        };

        underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <23 26>;
            layers = <0>;
        };

        capsword {
            bindings = <&caps_word>;
            key-positions = <20 29>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q            &kp W            &kp F              &kp P         &kp B          &kp J        &kp L         &kp U               &kp Y             &kp SEMI
&hml LEFT_GUI A  &hml LEFT_ALT R  &hml LEFT_SHIFT S  &hml LCTRL T  &kp G          &kp M        &hmr RCTRL N  &hmr RIGHT_SHIFT E  &hmr RIGHT_ALT I  &hmr RIGHT_GUI O
&kp Z            &kp X            &kp C              &kp D         &kp V          &kp K        &kp H         &kp COMMA           &kp DOT           &kp FSLH
                                                     &lt 3 TAB     &lt 1 ENTER    &lt 2 SPACE  &kp BSPC
            >;
        };

        nav_layer {
            bindings = <
&none  &none  &none  &none  &none    &none           &kp LBRC          &kp RIGHT_BRACE    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&none  &none  &none  &none  &none    &kp LEFT_ARROW  &kp DOWN_ARROW    &kp UP_ARROW       &kp RIGHT             &none
&none  &none  &none  &none  &none    &none           &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp GREATER_THAN      &kp LESS_THAN
                     &none  &none    &none           &none
            >;
        };

        sym_layer {
            bindings = <
&none              &none      &kp ASTERISK  &kp AMPERSAND    &none       &none  &none  &none  &none  &none
&kp DOUBLE_QUOTES  &kp CARET  &kp PERCENT   &kp DOLLAR       &kp PLUS    &none  &none  &none  &none  &none
&kp TILDE          &kp HASH   &kp AT_SIGN   &kp EXCLAMATION  &kp PIPE    &none  &none  &none  &none  &none
                                            &none            &none       &none  &none
            >;
        };

        num_layer {
            bindings = <
&none  &none  &none  &none  &none    &none   &kp N7  &kp N8  &kp N9  &none
&none  &none  &none  &none  &none    &none   &kp N4  &kp N5  &kp N6  &none
&none  &none  &none  &none  &none    &kp N0  &kp N1  &kp N2  &kp N3  &none
                     &none  &none    &none   &none
            >;
        };

        tri_layer {
            bindings = <
&sys_reset   &none  &none  &none       &bt BT_SEL 0    &none  &none  &none  &none  &sys_reset
&bootloader  &none  &none  &none       &bt BT_SEL 1    &none  &none  &none  &none  &bootloader
&none        &none  &none  &bt BT_CLR  &bt BT_SEL 2    &none  &none  &none  &none  &none
                           &none       &none           &none  &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <4>;
        };
    };
};
